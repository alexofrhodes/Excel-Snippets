
Function CommentsMoveToOwnLine(ByVal txt As String) As String
'@BlogPosted
'@INCLUDE PROCEDURE CommentsTrim
'@AssignedModule F_Vbe_Comments

    Dim var As Variant
    ReDim var(0)
    Dim str As Variant
        str = Split(txt, vbNewLine)

    Dim n               As Long
    Dim i               As Long
    Dim j               As Long
    Dim k               As Long
    Dim L               As Long
    Dim lineText        As String
    Dim QUOTES          As Long
    Dim Q               As Long
    Dim StartPos        As Long

    For j = LBound(str) To UBound(str)
        lineText = Trim(str(j))
        StartPos = 1
Retry:
        n = InStr(StartPos, lineText, "'")
        Q = InStr(StartPos, lineText, """")
        QUOTES = 0
        If Q < n Then
            For L = 1 To n
                If Mid(lineText, L, 1) = """" Then
                    QUOTES = QUOTES + 1
                End If
            Next L
        End If
        If QUOTES = Application.WorksheetFunction.Odd(QUOTES) Then
            StartPos = n + 1
            GoTo Retry:
        Else
            Select Case n
                Case Is = 0
                    var(UBound(var)) = str(j)
                    ReDim Preserve var(UBound(var) + 1)
                Case Is = 1
                    var(UBound(var)) = CommentsTrim(str(j))
                    ReDim Preserve var(UBound(var) + 1)
                Case Is > 1
                    var(UBound(var)) = Space(Len(str(j)) - Len(LTrim(str(j)))) & Mid(lineText, n)
                    ReDim Preserve var(UBound(var) + 1)
                    var(UBound(var)) = Space(Len(str(j)) - Len(LTrim(str(j)))) & Left(lineText, n - 1)
                    ReDim Preserve var(UBound(var) + 1)
            End Select
        End If
    Next j

     CommentsMoveToOwnLine = Join(var, vbNewLine)
     CommentsMoveToOwnLine = Left(CommentsMoveToOwnLine, Len(CommentsMoveToOwnLine) - Len(vbNewLine))
End Function
