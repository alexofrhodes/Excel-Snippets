
Sub ExportTargetProcedure( _
        Optional TargetWorkbook As Workbook, _
        Optional Module As VBComponent, _
        Optional Procedure As String)
'@BlogPosted
'@AssignedModule F_Vbe_Procedures_Export
'@INCLUDE PROCEDURE LinkedDeclarations
'@INCLUDE PROCEDURE FileExists
'@INCLUDE PROCEDURE TxtOverwrite
'@INCLUDE PROCEDURE TxtRead
'@INCLUDE PROCEDURE AssignCPSvariables
'@INCLUDE PROCEDURE ExportLinkedDeclaration
'@INCLUDE PROCEDURE LinkedClasses
'@INCLUDE PROCEDURE LinkedUserforms
'@INCLUDE PROCEDURE ProcedureCode
'@INCLUDE PROCEDURE ProcedureLastModAdd
'@INCLUDE PROCEDURE ProcedureLastModified
'@INCLUDE PROCEDURE StringLastModified
'@INCLUDE PROCEDURE AddLinkedLists
'@INCLUDE DECLARATION GITHUB_LOCAL_LIBRARY_CLASSES
'@INCLUDE DECLARATION GITHUB_LOCAL_LIBRARY_PROCEDURES
'@INCLUDE DECLARATION GITHUB_LOCAL_LIBRARY_USERFORMS

    If Not AssignCPSvariables(TargetWorkbook, Module, Procedure) Then Exit Sub

    Dim proclastmod
        proclastmod = ProcedureLastModified(TargetWorkbook, Module, Procedure)
    If proclastmod = 0 Then
        AddLinkedLists TargetWorkbook, Module, Procedure
        proclastmod = ProcedureLastModAdd(TargetWorkbook, Module, Procedure)
    End If

    Dim code As String
        code = ProcedureCode(TargetWorkbook, Module, CStr(Procedure))
    Dim FileFullName As String
        FileFullName = GITHUB_LOCAL_LIBRARY_PROCEDURES & Procedure & ".txt"
    If FileExists(FileFullName) Then
        Dim filelastmod
            filelastmod = StringLastModified(TxtRead(FileFullName))
        If proclastmod > filelastmod Then
            Debug.Print "OVERWROTE " & Procedure
            TxtOverwrite FileFullName, code
        End If
    Else
        Debug.Print "NEW " & Procedure
        TxtOverwrite FileFullName, code
    End If

    Dim element
    For Each element In LinkedUserforms(TargetWorkbook, Module, CStr(Procedure))
        TargetWorkbook.VBProject.VBComponents(element).Export GITHUB_LOCAL_LIBRARY_USERFORMS & element & ".frm"
    Next
    For Each element In LinkedClasses(TargetWorkbook, Module, CStr(Procedure))
        TargetWorkbook.VBProject.VBComponents(element).Export GITHUB_LOCAL_LIBRARY_CLASSES & element & ".cls"
    Next
    For Each element In LinkedDeclarations(TargetWorkbook, Module, CStr(Procedure))
        ExportLinkedDeclaration TargetWorkbook, CStr(element)
    Next
End Sub
