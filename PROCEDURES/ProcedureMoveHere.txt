
'* Modified   : Date and Time       Author              Description
'* Updated    : 20-10-2022 12:52    Alex                initial release (ProcedureMoveHere)

Sub ProcedureMoveHere( _
                     Optional Procedure As String)
'@BlogPosted
'@AssignedModule F_Vbe_Procedures_Move
'@INCLUDE PROCEDURE ActiveCodepaneWorkbook
'@INCLUDE PROCEDURE AssignProcedureVariable
'@INCLUDE PROCEDURE ActiveProcedure
'@INCLUDE PROCEDURE ProcedureLinesFirst
'@INCLUDE PROCEDURE ProcedureLinesLast
'@INCLUDE PROCEDURE ProcedureCode
'@INCLUDE PROCEDURE ProcedureLinesRemove
'@INCLUDE PROCEDURE ActiveModule
'@INCLUDE PROCEDURE ModuleOfProcedure
'@INCLUDE PROCEDURE ProcedureAssignedModuleAdd

    
    Dim TargetWorkbook As Workbook
    Set TargetWorkbook = ActiveCodepaneWorkbook
    If Not AssignProcedureVariable(TargetWorkbook, Procedure) Then Exit Sub
    Dim Module As VBComponent
    Set Module = ModuleOfProcedure(TargetWorkbook, Procedure)
    Dim s As String
        s = ProcedureCode(TargetWorkbook, Module, Procedure)

        If InStr(1, s, "'@AssignedModule") = 0 Then
            ProcedureAssignedModuleAdd TargetWorkbook, Module, Procedure
            s = ProcedureCode(TargetWorkbook, Module, Procedure)
'            ProcedureLinesRemove "'@AssignedModule", Procedure, Module, TargetWorkbook
        End If

    Dim sl As Long, cl As Long
        sl = ProcedureLinesFirst(Module, Procedure)
        cl = ProcedureLinesLast(Module, Procedure, False) - sl + 1
    ActiveModule.codeModule.InsertLines ProcedureLinesLast(Module, ActiveProcedure, True) + 1, s
    Module.codeModule.DeleteLines sl, cl
End Sub
