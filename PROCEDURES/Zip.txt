
Rem  Zip a file or a folder to a zip file/folder using Windows Explorer.
Rem  Default behaviour is similar to right-clicking a file/folder and selecting:
Rem    Send to zip file.
Rem
Rem  Parameters:
Rem    Path:
Rem        Valid (UNC) path to the file or folder to zip.
Rem    Destination:
Rem        (Optional) Valid (UNC) path to file with zip extension or other extension.
Rem    Overwrite:
Rem        (Optional) Leave (default) or overwrite an existing zip file.
Rem        If False, the created zip file will be versioned: Example.zip, Example (2).zip, etc.
Rem        If True, an existing zip file will first be deleted, then recreated.
Rem
Rem    Path and Destination can be relative paths. If so, the current path is used.
Rem
Rem    If success, 0 is returned, and Destination holds the full path of the created zip file.
Rem    If error, error code is returned, and Destination will be zero length string.
Rem
Rem  Early binding requires references to:
Rem
Rem    Shell:
Rem        Microsoft Shell Controls And Automation
Rem
Rem    Scripting.FileSystemObject:
Rem        Microsoft Scripting Runtime
Rem
Rem  2017-10-22. Gustav Brock. Cactus Data ApS, CPH.
Public Function Zip( _
    ByVal Path As String, _
    Optional ByRef Destination As String, _
    Optional ByVal Overwrite As Boolean) _
    As Long
    '@INCLUDE FileExists
    '@INCLUDE FolderExists
    '@INCLUDE OpenTextFile
    '@INCLUDE getFolder
    #If EarlyBinding Then
        Dim FileSystemObject    As Scripting.FileSystemObject
        Dim ShellApplication    As Shell
        Set FileSystemObject = New Scripting.FileSystemObject
        Set ShellApplication = New Shell
    #Else
        Dim FileSystemObject    As Object
        Dim ShellApplication    As Object
        Set FileSystemObject = CreateObject("Scripting.FileSystemObject")
        Set ShellApplication = CreateObject("Shell.Application")
    #End If
    Const ZipExtensionName  As String = "zip"
    Const ZipExtension      As String = "." & ZipExtensionName
    Const ErrorPathFile     As Long = 75
    Const ErrorOther        As Long = -1
    Const ErrorNone         As Long = 0
    Const MaxZipVersion     As Integer = 1000
    Dim ZipHeader           As String
    Dim ZipPath             As String
    Dim ZipName             As String
    Dim ZipFile             As String
    Dim ZipBase             As String
    Dim ZipTemp             As String
    Dim version             As Integer
    Dim Result              As Long
    If FileSystemObject.FileExists(Path) Then
        ZipName = FileSystemObject.GetBaseName(Path) & ZipExtension
        ZipPath = FileSystemObject.GetFile(Path).ParentFolder
    ElseIf FileSystemObject.FolderExists(Path) Then
        ZipName = FileSystemObject.GetBaseName(Path) & ZipExtension
        ZipPath = FileSystemObject.getFolder(Path).ParentFolder
    Else
    End If
    If ZipName = "" Then
        Destination = ""
    Else
        If Destination <> "" Then
            If FileSystemObject.GetExtensionName(Destination) = "" Then
                ZipPath = Destination
            Else
                ZipName = FileSystemObject.GetFileName(Destination)
                ZipPath = FileSystemObject.GetParentFolderName(Destination)
            End If
        Else
        End If
        ZipFile = FileSystemObject.BuildPath(ZipPath, ZipName)
        If FileSystemObject.FileExists(ZipFile) Then
            If Overwrite = True Then
                FileSystemObject.DeleteFile ZipFile, True
            Else
                ZipBase = FileSystemObject.GetBaseName(ZipFile)
                version = version + 1
                Do
                    version = version + 1
                    ZipFile = FileSystemObject.BuildPath(ZipPath, ZipBase & Format(version, " \(0\)") & ZipExtension)
                Loop Until FileSystemObject.FileExists(ZipFile) = False Or version > MaxZipVersion
                If version > MaxZipVersion Then
                    Err.Raise ErrorPathFile, "Zip Create", "File could not be created."
                End If
            End If
        End If
        ZipTemp = FileSystemObject.BuildPath(ZipPath, FileSystemObject.GetBaseName(FileSystemObject.GetTempName()) & ZipExtension)
        ZipHeader = Chr(80) & Chr(75) & Chr(5) & Chr(6) & String(18, vbNullChar)
        With FileSystemObject.OpenTextFile(ZipTemp, ForWriting, True)
            .Write ZipHeader
            .Close
        End With
        ZipTemp = FileSystemObject.GetAbsolutePathName(ZipTemp)
        Path = FileSystemObject.GetAbsolutePathName(Path)
        With ShellApplication
            Debug.Print Timer, "Zipping started . ";
            .Namespace(CVar(ZipTemp)).CopyHere CVar(Path)
            On Error Resume Next
            Do Until .Namespace(CVar(ZipTemp)).Items.Count = 1
                Application.Wait (Now + TimeValue("0:00:01"))
                Debug.Print ".";
            Loop
            Debug.Print
            On Error GoTo 0
            Debug.Print Timer, "Zipping finished."
        End With
        FileSystemObject.MoveFile ZipTemp, ZipFile
    End If
    Set ShellApplication = Nothing
    Set FileSystemObject = Nothing
    If Err.Number <> ErrorNone Then
        Destination = ""
        Result = Err.Number
    ElseIf Destination = "" Then
        Result = ErrorOther
    End If
    Zip = Result
End Function
